
See the top level README for information on where to find documentation
for the raspberry pi and the ARM processor inside.  Also find information
on how to load and run these programs.

These examples are for the pi2, see other directories for other
flavors of raspberry pi.  The raspberry pi family is more similar than
different, but I have decided it is easier to manage by grouping the
examples by board type.

The pi2 is not only a different board but the Broadcom chip is different
as well. For the most part they cut out the ARM11 and replaced it with a
Cortex A7.  Quad core.  The peripherals for the pi1 boards were in the
ARM address space starting at 0x20xxxxxx, but to allow for more room
to have more ram they moved the peripherals to 0x3Fxxxxxx.

My preferred way to run examples is to use my bootloader07 kernel7.img
on the board with an ftdi usb to uart board or cable.  I also solder a
momentary pushbutton on the RUN pins, which is basically a board reset.
There are ways to do this without soldering, pins you can push in rather
than solder.

Once the sd card is in with bootloader07, press reset, download the
intel hex (.hex) version of the program I want to run. Press 'g' to go.
Repeat as necessary.

Or you can copy the .bin file to the kernel7.img file on your sd card,
replace the sd card and turn the power on.

In 2015 the standard GPU bootloader would put the ARM in HYP mode
on its way to running kernel7.img.  As of this writing that is still
the case.  I now see how to switch back to SVC.  So there is a directory
of examples for staying in HYP mode and a directory for switching
to SVC mode.

I am warming to the idea of using a config.txt, the SVC_BOOT directory
is examples that do not have to be switched back to SVC mode, instead
a config.txt is used with settings that allow us to completely control
the boot of the four cores (and not switch their modes).
